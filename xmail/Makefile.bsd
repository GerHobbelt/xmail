#
#  XMail by Davide Libenzi (Intranet and Internet mail server)
#  Copyright (C) 1999,..,2010  Davide Libenzi
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#  Davide Libenzi <davidel@xmailserver.org>
#

CC = g++
LD = g++
STRIP = strip

ifeq ("$(XMAIL_FILE_OFF_BITS)", "")
    CFLAGS := $(CFLAGS) -D_FILE_OFFSET_BITS=64
else
    CFLAGS := $(CFLAGS) -D_FILE_OFFSET_BITS=$(XMAIL_FILE_OFF_BITS)
endif

ifneq ("$(WITH_SSL_INCLUDE)", "")
    CFLAGS := $(CFLAGS) -I$(WITH_SSL_INCLUDE)
endif
ifneq ("$(WITH_SSL_LIB)", "")
    LDFLAGS := $(LDFLAGS) -L$(WITH_SSL_LIB)
endif

ifeq ("$(SSLLIBS)", "")
    SSLLIBS = -lssl -lcrypto
endif

MAINSRC = MainBSD.cpp
SYSSRCS = SysDepBSD.cpp SysDepUnix.cpp SysOsEventfd_pipe.cpp

ifeq ($(OSTYPE),OpenBSD)
	SYSTYPE = openbsd
	CFLAGS := $(CFLAGS) -I. -D__UNIX__ -D__BSD__ -D__OPENBSD__ -D_REENTRANT=1 -D_THREAD_SAFE=1 -DHAS_SYSMACHINE
	LDFLAGS := $(LDFLAGS) $(SSLLIBS) -lkvm -pthread
else
ifeq ($(OSTYPE),NetBSD)
	SYSTYPE = netbsd
	CVFS = $(shell grep -c statvfs /usr/include/sys/statvfs.h)
	ifneq ("$(CVFS)", "0")
	      CFLAGS := $(CFLAGS) -DBSD_USE_STATVFS
	endif
	CFLAGS := $(CFLAGS) -I. -D__UNIX__ -D__BSD__ -D__NETBSD__ -D_REENTRANT=1 -D_THREAD_SAFE=1 -DHAS_SYSMACHINE
	LDFLAGS := $(LDFLAGS) $(SSLLIBS) -lkvm -pthread
else
ifeq ($(OSTYPE),Darwin)
	SYSTYPE = darwin
	CFLAGS := $(CFLAGS) -I. -D__UNIX__ -D__BSD__ -D__DARWIN__ -D_REENTRANT=1 -D_THREAD_SAFE=1 -DHAS_SYSMACHINE
	LDFLAGS := $(LDFLAGS) $(SSLLIBS) -lkvm -lpthread
else
ifeq ($(OSTYPE),Darwin10.5)
	SYSTYPE = darwin-10.5
	CFLAGS := $(CFLAGS) -I. -D__UNIX__ -D__BSD__ -D__DARWIN__ -D__DARWIN_10_5__ -D_REENTRANT=1 \
	       -D_THREAD_SAFE=1 -DHAS_SYSMACHINE
	LDFLAGS := $(LDFLAGS) $(SSLLIBS) -lpthread
else
ifeq ($(OSTYPE),GNU/kFreeBSD)
	SYSTYPE = freebsd
	CFLAGS := $(CFLAGS) -I. -D__UNIX__ -D__BSD__ -D__FREEBSD__ -D_REENTRANT=1 -D_THREAD_SAFE=1 -DHAS_SYSMACHINE
	LDFLAGS := $(LDFLAGS) $(SSLLIBS) -lkvm -pthread
else
	SYSTYPE = freebsd
	ifeq ($(wildcard /usr/lib/libc_r.*), )
		LIBC_R =
	else
		LIBC_R = -lc_r
	endif
	CFLAGS := $(CFLAGS) -I. -D__UNIX__ -D__BSD__ -D__FREEBSD__ -D_REENTRANT=1 -D_THREAD_SAFE=1 -DHAS_SYSMACHINE
	LDFLAGS := $(LDFLAGS) $(SSLLIBS) -lkvm -lcrypt -pthread $(LIBC_R)
endif
endif
endif
endif
endif

CFLAGS := $(CFLAGS) -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -D_POSIX_PTHREAD_SEMANTICS

ifeq ($(NEED_LCR),1)
	LDFLAGS := $(LDFLAGS) -lc_r
endif

include Makefile.common

